package me.zeroeightsix.kami.module.modules.misc;

import me.zeroeightsix.kami.command.Command;
import me.zeroeightsix.kami.module.Module;

import net.minecraft.entity.Entity;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.util.math.Vec3d;

import java.util.HashMap;

//pastebin.com/nsuMmQGD
@Module.Info(name = "TpCoordExploit", category = Module.Category.MISC)
public class TpCoordExploit extends Module{
    // Map of each known player and their last known position
    private HashMap<Entity, Vec3d> knownPlayers = new HashMap<Entity, Vec3d>();
   
    private HashMap<String, Vec3d> tpdPlayers = new HashMap<String, Vec3d>();
   
    // Number of ticks since we last calculated if any players had teleported
    private int numTicks = 0;
   
    private int numForgetTicks = 0;
   
    public void dump()
    {
        for(Entity entity: mc.world.loadedEntityList)
        {
            if(entity instanceof EntityPlayer)
            {
                System.out.println(entity.getName() + ": " + entity.getPositionVector().toString());
                Command.sendChatMessage(entity.getName() + ": " + entity.getPositionVector().toString());
            }
        }
    }
   
    public void clear()
    {
        knownPlayers.clear();
    }
   
    @Override
    public void onUpdate()
    {
        if(numTicks >= 50)
        {
            numTicks = 0;
            for(Entity entity: mc.world.loadedEntityList)
            {
                if(entity instanceof EntityPlayer && entity.getName() != mc.player.getName())
                {
 
                    Vec3d playerPos = new Vec3d(entity.posX, entity.posY, entity.posZ);
                    if(knownPlayers.containsKey(entity))
                    {
                        if(Math.abs(knownPlayers.get(entity).distanceTo(playerPos)) > 50 && Math.abs(mc.player.getPositionVector().distanceTo(playerPos)) > 100 && !(tpdPlayers.containsKey(entity.getName()) && tpdPlayers.get(entity.getName()) == playerPos))
                        {
                            // This player teleported, alert the user
                            Command.sendChatMessage("Player \"" + entity.getName() + "\" teleported to " + playerPos.toString());
                            knownPlayers.remove(entity);
                            tpdPlayers.put(entity.getName(), playerPos);
                        }
                        //if(Math.abs(knownPlayers.get(entity).distanceTo(playerPos)) > 2)
                            //Client.addChatMessage("Player \"" + entity.getName() + "\" moved: " + Math.abs(knownPlayers.get(entity).distanceTo(playerPos)));
                       
                        // Update the stored location of the player
                        knownPlayers.put(entity, playerPos);
                    }
                    else
                    {
                        knownPlayers.put(entity, playerPos);
                        //Client.addChatMessage("Added new player: \"" + entity.getName() + "\" with position: " + playerPos.toString());
                    }
                }
            }
        }
        if(numForgetTicks >= 9000000)
        {
            tpdPlayers.clear();
        }
        numTicks++;
        numForgetTicks++;
    }
   
    /*@Override
    public boolean shouldDisplay()
    {
        return false;
    }*/

}
